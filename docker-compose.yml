services:
  # Nginx service (opcional con Octane, pero útil para archivos estáticos)
  nginx:
    image: nginx:stable-alpine
    container_name: laravel_nginx
    ports:
      - "8065:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/octane.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel_network

  # Laravel Octane service
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel_octane
    restart: unless-stopped
    ports:
      - "8000:8000"  # Puerto directo de Octane
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - mysql
      - redis
    networks:
      - laravel_network
    environment:
      - OCTANE_WORKERS=4
      - OCTANE_TASK_WORKERS=6
      - OCTANE_MAX_REQUESTS=1000
    command: ["php", "artisan", "octane:start", "--host=0.0.0.0", "--port=8000", "--workers=4", "--task-workers=6", "--max-requests=1000"]

  # MySQL service
  mysql:
    image: mysql:8.4
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: app_stream
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "33061:3306"
    networks:
      - laravel_network

  # Redis service
  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "63791:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# Networks
networks:
  laravel_network:
    name: laravel_network
    driver: bridge