services:
  # Laravel PHP-FPM service (primero para que inicie antes)
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - laravel_network
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=app_stream
      - DB_USERNAME=admin
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - XDEBUG_MODE=debug,develop
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 40s
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Nginx service
  nginx:
    image: nginx:stable-alpine
    container_name: laravel_nginx
    ports:
      - "8065:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_healthy
    networks:
      - laravel_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 10s
      timeout: 3s
      retries: 3

  # MySQL service
  mysql:
    image: mysql:8.4
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: app_stream
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "33061:3306"
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s

  # Redis service
  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "63791:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# Networks
networks:
  laravel_network:
    name: laravel_network
    driver: bridge